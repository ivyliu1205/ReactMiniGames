{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zilla/Desktop/UNSW/COMP6080/Final/exam-sample/src/pages/Slido.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport HeaderBar from '../components/HeaderBar';\nimport FootBar from '../components/FootBar';\nimport '../styles/Slido.css';\nimport a from '../data/shrek/1.png';\nimport b from '../data/shrek/2.png';\nimport c from '../data/shrek/3.png';\nimport d from '../data/shrek/4.png';\nimport e from '../data/shrek/5.png';\nimport f from '../data/shrek/6.png';\nimport g from '../data/shrek/7.png';\nimport h from '../data/shrek/8.png';\nexport default function Slido() {\n  _s();\n\n  const results = [a, b, c, d, e, f, g, h, ''];\n  const [game, setGame] = React.useState([]);\n  const connected = {\n    0: [1, 3],\n    1: [0, 2, 4],\n    2: [1, 5],\n    3: [0, 4, 6],\n    4: [1, 3, 5, 7],\n    5: [2, 4, 8],\n    6: [3, 7],\n    7: [4, 6, 8],\n    8: [7, 5]\n  };\n\n  function shuffleArray(array) {\n    const newArr = array.slice();\n\n    for (let i = newArr.length - 1; i > 0; i--) {\n      const rand = Math.floor(Math.random() * (i + 1));\n      [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]];\n    }\n\n    return newArr;\n  }\n\n  React.useEffect(() => {\n    setGame(shuffleArray(results));\n  }, []);\n  const blocks = game.map((ele, idx) => {\n    if (ele === '') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slido-blocks\",\n        name: idx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"slido-blocks\",\n      src: ele,\n      name: idx,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  });\n\n  function handleClick(event) {\n    const {\n      name\n    } = event.target;\n    console.log('click', name);\n    let moveTo = null;\n\n    for (const conn of connected[name]) {\n      if (game[conn] === '') {\n        moveTo = conn;\n        break;\n      }\n    }\n\n    console.log('can move to', moveTo);\n\n    if (moveTo !== null && moveTo != undefined) {\n      console.log('move', game[name])[(game[name], game[moveTo])] = [game[moveTo], game[name]];\n      setGame(game);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"slido-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slido-block-rows\",\n          children: [blocks[0], blocks[1], blocks[2]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slido-block-rows\",\n          children: [blocks[3], blocks[4], blocks[5]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slido-block-rows\",\n          children: [blocks[6], blocks[7], blocks[8]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"slido-btn-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"slido-solve-btn\",\n          onClick: () => setGame(results),\n          children: \"Solve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"slido-reset-btn\",\n          onClick: () => setGame(shuffleArray(results)),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FootBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Slido, \"OuXkYuI2coYlRm1cVAmFRPPSZyU=\");\n\n_c = Slido;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slido\");","map":{"version":3,"sources":["/Users/zilla/Desktop/UNSW/COMP6080/Final/exam-sample/src/pages/Slido.jsx"],"names":["React","HeaderBar","FootBar","a","b","c","d","e","f","g","h","Slido","results","game","setGame","useState","connected","shuffleArray","array","newArr","slice","i","length","rand","Math","floor","random","useEffect","blocks","map","ele","idx","handleClick","event","name","target","console","log","moveTo","conn","undefined"],"mappings":"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","sourcesContent":["import React from 'react'\nimport HeaderBar from '../components/HeaderBar'\nimport FootBar from '../components/FootBar'\nimport '../styles/Slido.css'\nimport a from '../data/shrek/1.png'\nimport b from '../data/shrek/2.png'\nimport c from '../data/shrek/3.png'\nimport d from '../data/shrek/4.png'\nimport e from '../data/shrek/5.png'\nimport f from '../data/shrek/6.png'\nimport g from '../data/shrek/7.png'\nimport h from '../data/shrek/8.png'\n\nexport default function Slido () {\n    const results = [a, b, c, d, e, f, g, h, '']\n    const [game, setGame] = React.useState([])\n    const connected = {\n        0: [1, 3],\n        1: [0, 2, 4],\n        2: [1, 5],\n        3: [0, 4, 6],\n        4: [1, 3, 5, 7],\n        5: [2, 4, 8],\n        6: [3, 7],\n        7: [4, 6, 8],\n        8: [7, 5]\n    }\n\n    function shuffleArray(array) {\n        const newArr = array.slice()\n        for (let i = newArr.length - 1; i > 0; i--) {\n            const rand = Math.floor(Math.random() * (i + 1));\n            [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]];\n        }\n        return newArr\n    }\n\n    React.useEffect(() => {\n        setGame(shuffleArray(results))\n    }, [])\n\n    const blocks = game.map((ele, idx) => {\n        if (ele === '') {\n            return <div className=\"slido-blocks\" name={idx} ></div>\n        }\n        return <img className=\"slido-blocks\" src={ele} name={idx} onClick={handleClick} />\n    })\n\n    function handleClick (event) {\n        const { name } = event.target\n        console.log('click', name)\n\n        let moveTo = null\n        for (const conn of connected[name]) {\n            if (game[conn] === '') {\n                moveTo = conn\n                break\n            }\n        }\n        console.log('can move to', moveTo)\n\n        if (moveTo !== null && moveTo != undefined) {\n            console.log('move', game[name])\n            [game[name], game[moveTo]] = [game[moveTo], game[name]]\n            setGame(game)\n        }\n    }\n\n    return (\n        <div className=\"page-container\">\n            <HeaderBar />\n            <div className=\"container\">\n                <div id=\"slido-container\">\n                    <div className=\"slido-block-rows\">\n                        {blocks[0]}\n                        {blocks[1]}\n                        {blocks[2]}\n                    </div>\n                    <div className=\"slido-block-rows\">\n                        {blocks[3]}\n                        {blocks[4]}\n                        {blocks[5]}\n                    </div>\n                    <div className=\"slido-block-rows\">\n                        {blocks[6]}\n                        {blocks[7]}\n                        {blocks[8]}\n                    </div>\n                </div>\n                <div id=\"slido-btn-container\">\n                    <button id=\"slido-solve-btn\" onClick={() => setGame(results)}>Solve</button>\n                    <button id=\"slido-reset-btn\" onClick={() => setGame(shuffleArray(results))}>Reset</button>\n                </div>\n            </div>\n            <FootBar />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}