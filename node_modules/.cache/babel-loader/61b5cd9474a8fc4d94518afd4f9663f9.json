{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zilla/Desktop/UNSW/COMP6080/Final/exam-sample/src/pages/Tetro.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport HeaderBar from '../components/HeaderBar';\nimport FootBar from '../components/FootBar';\nexport default function Tetro() {\n  _s();\n\n  const [board, setBoard] = React.useState([]);\n\n  function setInitBoard() {\n    const initBoard = [];\n\n    for (let i = 0; i < 10; i++) {\n      const newRow = [];\n\n      for (let j = 0; j < 12; j++) {\n        newRow.push(0);\n      }\n\n      initBoard.push(newRow);\n    }\n\n    setBoard(initBoard);\n  }\n\n  React.useEffect(() => {\n    setInitBoard();\n  }, []);\n  const blocks = board.map((row, rowIdx) => {\n    const blockRows = row.map((cell, colIdx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-cells\",\n        name: rowIdx,\n        value: colIdx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-rows\",\n      children: blockRows\n    }, rowIdx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  });\n\n  function handleReset() {\n    console.log('handleReset');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"board-container\",\n        children: blocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"tetro-reset-btn\",\n        onClick: handleReset,\n        children: \"RESET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FootBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tetro, \"VsWp3D5Y4PFtGotDZPdcRq2vVzU=\");\n\n_c = Tetro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tetro\");","map":{"version":3,"sources":["/Users/zilla/Desktop/UNSW/COMP6080/Final/exam-sample/src/pages/Tetro.jsx"],"names":["React","HeaderBar","FootBar","Tetro","board","setBoard","useState","setInitBoard","initBoard","i","newRow","j","push","useEffect","blocks","map","row","rowIdx","blockRows","cell","colIdx","handleReset","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,eAAe,SAASC,KAAT,GAAkB;AAAA;;AAC7B,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA5B;;AAEA,WAASC,YAAT,GAAyB;AACrB,UAAMC,SAAS,GAAG,EAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,YAAMC,MAAM,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBD,QAAAA,MAAM,CAACE,IAAP,CAAY,CAAZ;AACH;;AACDJ,MAAAA,SAAS,CAACI,IAAV,CAAeF,MAAf;AACH;;AACDL,IAAAA,QAAQ,CAACG,SAAD,CAAR;AACH;;AAEDR,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AAClBN,IAAAA,YAAY;AACf,GAFD,EAEG,EAFH;AAIA,QAAMO,MAAM,GAAGV,KAAK,CAACW,GAAN,CAAU,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACtC,UAAMC,SAAS,GAAGF,GAAG,CAACD,GAAJ,CAAQ,CAACI,IAAD,EAAOC,MAAP,KAAkB;AACxC,0BAAO;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,IAAI,EAAEH,MAAnC;AAA2C,QAAA,KAAK,EAAEG;AAAlD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFiB,CAAlB;AAGA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKF;AADL,OAAiCD,MAAjC;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GATc,CAAf;;AAWA,WAASI,WAAT,GAAwB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,EAAE,EAAC,iBAAR;AAAA,kBACKT;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,EAAE,EAAC,iBAAX;AAA6B,QAAA,OAAO,EAAEO,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAhDuBlB,K;;KAAAA,K","sourcesContent":["import React from 'react'\nimport HeaderBar from '../components/HeaderBar'\nimport FootBar from '../components/FootBar'\n\nexport default function Tetro () {\n    const [ board, setBoard ] = React.useState([])\n\n    function setInitBoard () {\n        const initBoard = []\n        for (let i = 0; i < 10; i++) {\n            const newRow = []\n            for (let j = 0; j < 12; j++) {\n                newRow.push(0)\n            }\n            initBoard.push(newRow)\n        }\n        setBoard(initBoard)\n    } \n\n    React.useEffect(() => {\n        setInitBoard()\n    }, [])\n\n    const blocks = board.map((row, rowIdx) => {\n        const blockRows = row.map((cell, colIdx) => {\n            return <div className=\"board-cells\" name={rowIdx} value={colIdx}></div>\n        })\n        return (\n            <div className=\"board-rows\" key={rowIdx}>\n                {blockRows}\n            </div>\n        )\n    })\n\n    function handleReset () {\n        console.log('handleReset')\n    }\n\n    return (\n        <div className=\"page-container\">\n            <HeaderBar />\n            <div className=\"container\">\n                <div id=\"board-container\">\n                    {blocks}\n                </div>\n                <button id=\"tetro-reset-btn\" onClick={handleReset}>\n                    RESET\n                </button>\n            </div>\n            <FootBar />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}