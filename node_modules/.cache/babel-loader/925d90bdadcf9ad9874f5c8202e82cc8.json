{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zilla/Desktop/UNSW/COMP6080/Final/exam-sample/src/pages/Blanko.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport HeaderBar from '../components/HeaderBar';\nimport FootBar from '../components/FootBar';\nimport { strs } from '../data/blanko.js';\nimport '../styles/Blanko.css';\nexport default function Blanko() {\n  _s();\n\n  const [currStr, setCurrStr] = React.useState('');\n  const [emptyThree, setEmptyThree] = React.useState([0, 1, 2]); // const [currInput, setCurrInput] = React.useState({})\n\n  let currInput = {};\n\n  function getRandomFromArray(array) {\n    const randIdx = Math.floor(Math.random() * array.length);\n    return array[randIdx];\n  }\n\n  const initGame = React.useCallback(() => {\n    // setCurrInput({})\n    currInput = {};\n    const randomStr = getRandomFromArray(strs);\n    setCurrStr(randomStr);\n    let possibleIdx = [];\n\n    for (let i = 0; i < randomStr.length; i++) {\n      if (randomStr[i] !== ' ') {\n        possibleIdx.push(i);\n      }\n    }\n\n    console.log('possibleIdx', possibleIdx);\n    const emptyIdx = [];\n\n    for (let i = 0; i < 3; i++) {\n      const choosed = getRandomFromArray(possibleIdx);\n      possibleIdx = possibleIdx.filter(ele => ele !== choosed);\n      emptyIdx.push(choosed);\n    }\n\n    setEmptyThree(emptyIdx);\n  }, []);\n  React.useEffect(() => {\n    initGame(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const blocks = currStr.split(\"\").map((ele, idx) => {\n    console.log('blocks', ele, idx, currStr, emptyThree);\n\n    if (emptyThree.includes(idx)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blanko-blocks\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"blanko-input-box\",\n          name: idx,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blanko-blocks\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blanko-text\",\n        children: ele\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  });\n\n  function handleReset() {\n    console.log('handle Reset');\n    initGame();\n  }\n\n  function checkInputs() {\n    console.log('enter checkInputs', currInput);\n    let isCorrect = true;\n\n    if (Object.values(currInput).length === 3 && !Object.values(currInput).includes('')) {\n      console.log('check');\n\n      for (let k of Object.keys(currInput)) {\n        const v = currInput[k];\n\n        if (v !== currStr[v]) {\n          console.log('not eqal', k, v, currStr.charAt(k));\n          isCorrect = false;\n          break;\n        }\n      }\n    } else {\n      console.log('no check');\n      isCorrect = false;\n    }\n\n    if (isCorrect) {\n      window.alert('Correct!');\n    }\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log('handleChange', name, value); // setCurrInput(prevData => ({ ...prevData, [name]: value}))\n\n    currInput[name] = value;\n    console.log(currInput);\n    checkInputs();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"block-container\",\n        children: blocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"blanko-reset-btn\",\n        onClick: handleReset,\n        children: \"RESET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FootBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Blanko, \"wfaLLxnxORxJSoyKKXDTqIKHJXQ=\");\n\n_c = Blanko;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blanko\");","map":{"version":3,"sources":["/Users/zilla/Desktop/UNSW/COMP6080/Final/exam-sample/src/pages/Blanko.jsx"],"names":["React","HeaderBar","FootBar","strs","Blanko","currStr","setCurrStr","useState","emptyThree","setEmptyThree","currInput","getRandomFromArray","array","randIdx","Math","floor","random","length","initGame","useCallback","randomStr","possibleIdx","i","push","console","log","emptyIdx","choosed","filter","ele","useEffect","blocks","split","map","idx","includes","handleChange","handleReset","checkInputs","isCorrect","Object","values","k","keys","v","charAt","window","alert","event","name","value","target"],"mappings":"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","sourcesContent":["import React from 'react'\nimport HeaderBar from '../components/HeaderBar'\nimport FootBar from '../components/FootBar'\nimport { strs } from '../data/blanko.js'\nimport '../styles/Blanko.css'\n\nexport default function Blanko () {\n    const [currStr, setCurrStr] = React.useState('')\n    const [emptyThree, setEmptyThree] = React.useState([0, 1, 2])\n    // const [currInput, setCurrInput] = React.useState({})\n    let currInput = {}\n\n    function getRandomFromArray (array) {\n        const randIdx = Math.floor(Math.random() * array.length)\n        return array[randIdx]\n    }\n\n    const initGame = React.useCallback(() => {\n        // setCurrInput({})\n        currInput = {}\n        const randomStr = getRandomFromArray(strs)\n        setCurrStr(randomStr)\n\n        let possibleIdx = []\n        for (let i = 0; i < randomStr.length; i++) {\n            if (randomStr[i] !== ' ') {\n                possibleIdx.push(i)\n            }\n        }\n        console.log('possibleIdx', possibleIdx)\n\n        const emptyIdx = []\n        for (let i = 0; i < 3; i++) {\n            const choosed = getRandomFromArray(possibleIdx)\n            possibleIdx = possibleIdx.filter(ele => ele !== choosed)\n            emptyIdx.push(choosed)\n        }\n        setEmptyThree(emptyIdx)\n    }, [])\n\n    React.useEffect(() => {\n        initGame()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []) \n\n    const blocks = currStr.split(\"\").map((ele, idx)=> {\n        console.log('blocks', ele, idx, currStr, emptyThree)\n        if (emptyThree.includes(idx)) {\n            return (\n                <div className=\"blanko-blocks\" key={idx}>\n                    <input \n                        type=\"text\" \n                        className=\"blanko-input-box\" \n                        name={idx}\n                        onChange={handleChange}\n                    ></input>\n                </div>\n            )\n        }\n        return (\n            <div className=\"blanko-blocks\" key={idx}>\n                <div className=\"blanko-text\">{ele}</div>\n            </div>\n        )\n    })\n\n    function handleReset () {\n        console.log('handle Reset')\n        initGame()\n    }\n\n    function checkInputs () {\n        console.log('enter checkInputs', currInput)\n        let isCorrect = true\n        if (Object.values(currInput).length === 3 && !Object.values(currInput).includes('')) {\n            console.log('check')\n            for (let k of Object.keys(currInput)) {\n                const v = currInput[k]\n                if (v !== currStr[v]) {\n                    console.log('not eqal', k, v, currStr.charAt(k))\n                    isCorrect = false\n                    break\n                }\n            }\n        } else {\n            console.log('no check')\n            isCorrect = false\n        }\n        if (isCorrect) {\n            window.alert('Correct!')\n        }\n    }\n\n    function handleChange (event) {\n        const { name, value } = event.target\n        console.log('handleChange', name, value)\n        // setCurrInput(prevData => ({ ...prevData, [name]: value}))\n        currInput[name] = value\n        console.log(currInput)\n        checkInputs()\n    }\n\n    return (\n        <div className=\"page-container\">\n            <HeaderBar />\n            <div className=\"container\">\n                <div id=\"block-container\">\n                    {blocks}\n                </div>\n                <button id=\"blanko-reset-btn\" onClick={handleReset}>RESET</button>\n            </div>\n            <FootBar />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}